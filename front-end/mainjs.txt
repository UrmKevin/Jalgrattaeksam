import React, { useEffect, useState } from 'react';
import '../App.css';

function Main() {
  const [eksamid, setEksamid] = useState([]);
  const [searchByKoha, setSearchByKoha] = useState('');
  const [searchByAeg, setSearchByAeg] = useState('');

  // get database
  const fetchEksamid = async () => {
    try {
      const response = await fetch('https://localhost:7025/Eksam');
      const data = await response.json();
      setEksamid(data);
    } catch (error) {
      console.error('Error fetching eksamid:', error);
    }
  };

  useEffect(() => {
    fetchEksamid();
  }, []);

  function formatDateTime(dateTimeString) {
    const options = {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit',
      timeZoneName: 'short',
    };

    const formattedDateTime = new Date(dateTimeString).toLocaleString(undefined, options);
    return formattedDateTime;
  }

  const filteredEksamidByKoha = eksamid.filter((eksam) =>
    eksam.koha.toLowerCase().includes(searchByKoha.toLowerCase())
  );
  const filteredEksamidByAeg = eksamid.filter((eksam) => {
    const formattedDate = new Date(eksam.aeg).toLocaleDateString('en-US');
    return formattedDate.includes(searchByAeg);
  });
  const handleDateChange = (e) => {
    const selectedDate = new Date(e.target.value).toLocaleDateString('en-US');
    setSearchByAeg(selectedDate);
  };
  // resets date
  const resetDateInput = () => {
    setSearchByAeg('');
  };

  return (
    <div>
      <h1>Kudulehe</h1>
      <input
        type="text"
        placeholder="Search by Koha"
        value={searchByKoha}
        onChange={(e) => setSearchByKoha(e.target.value)}
        className="search-bar"
      />
      <input
        type="date"
        value={searchByAeg}
        onChange={handleDateChange}
        className="search-bar"
      />

      <button onClick={resetDateInput} id="ResetAeg" className="search-bar">
        Reset Aeg
      </button>

      <table>
        <thead>
          <tr>
            <th>Koha</th>
            <th>Aeg</th>
            <th>Eksamineerija</th>
          </tr>
        </thead>
        <tbody>
          {filteredEksamidByKoha
            .filter((eksam) => filteredEksamidByAeg.includes(eksam))
            .map((eksam, index) => (
              <tr key={index}>
                <td>{eksam.koha}</td>
                <td>{formatDateTime(eksam.aeg)}</td>
                <td>{eksam.eksamineerija}</td>
              </tr>
            ))}
        </tbody>
      </table>
    </div>
  );
}

export default Main;